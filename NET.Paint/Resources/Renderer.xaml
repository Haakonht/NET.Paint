<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:shape="clr-namespace:NET.Paint.Drawing.Model.Shape;assembly=NET.Paint.Drawing" xmlns:converter="clr-namespace:NET.Paint.Converter">

    <converter:IsTextBoldConverter x:Key="BoolToFontWeightConverter"/>
    <converter:IsTextItalicConverter x:Key="BoolToFontStyleConverter"/>
    <converter:TextDecorationsConverter x:Key="TextDecorationsConverter"/>

    <DataTemplate DataType="{x:Type shape:XPencil}">
        <Polyline Points="{Binding Points, Converter={StaticResource PointsCollectionConverter}}" Stroke="{Binding StrokeColor, Converter={StaticResource ColorToBrushConverter}}" StrokeThickness="{Binding StrokeThickness}" StrokeDashArray="{Binding StrokeStyle.DashArray}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:XLine}">
        <Line X1="{Binding Start.X}" Y1="{Binding Start.Y}" X2="{Binding End.X}" Y2="{Binding End.Y}" Stroke="{Binding StrokeColor, Converter={StaticResource ColorToBrushConverter}}" StrokeThickness="{Binding StrokeThickness}" StrokeDashArray="{Binding StrokeStyle.DashArray}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:XCurve}">
        <Path Stroke="{Binding StrokeColor, Converter={StaticResource ColorToBrushConverter}}" StrokeThickness="{Binding StrokeThickness}" StrokeDashArray="{Binding StrokeStyle.DashArray}">
            <Path.Data>
                <PathGeometry>
                    <PathFigure StartPoint="{Binding Start}">
                        <QuadraticBezierSegment Point1="{Binding Ctrl1}" Point2="{Binding End}" IsStroked="True" />
                    </PathFigure>
                </PathGeometry>
            </Path.Data>
        </Path>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:XBezier}">
        <Path Stroke="{Binding StrokeColor, Converter={StaticResource ColorToBrushConverter}}" StrokeThickness="{Binding StrokeThickness}" StrokeDashArray="{Binding StrokeStyle.DashArray}">
            <Path.Data>
                <PathGeometry>
                    <PathFigure StartPoint="{Binding Start}">
                        <BezierSegment Point1="{Binding Ctrl1}"  Point2="{Binding Ctrl2}"  Point3="{Binding End}" IsStroked="True" />
                    </PathFigure>
                </PathGeometry>
            </Path.Data>
        </Path>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:XCircle}">
        <Ellipse Width="{Binding Width}" Height="{Binding Height}" Stroke="{Binding StrokeColor, Converter={StaticResource ColorToBrushConverter}}" StrokeThickness="{Binding StrokeThickness}" Fill="{Binding FillColor, Converter={StaticResource ColorToBrushConverter}}" StrokeDashArray="{Binding StrokeStyle.DashArray}">
            <Ellipse.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}"/>
                    <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
                </TransformGroup>
            </Ellipse.RenderTransform>
        </Ellipse>
    </DataTemplate>


    <DataTemplate DataType="{x:Type shape:XEllipse}">
        <Ellipse Width="{Binding Width}" Height="{Binding Height}" Stroke="{Binding StrokeColor, Converter={StaticResource ColorToBrushConverter}}" StrokeThickness="{Binding StrokeThickness}" Fill="{Binding FillColor, Converter={StaticResource ColorToBrushConverter}}" StrokeDashArray="{Binding StrokeStyle.DashArray}">
            <Ellipse.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}"/>
                    <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
                </TransformGroup>
            </Ellipse.RenderTransform>
        </Ellipse>
    </DataTemplate>


    <DataTemplate DataType="{x:Type shape:XSquare}">
        <Rectangle Width="{Binding Width}" Height="{Binding Height}" Stroke="{Binding StrokeColor, Converter={StaticResource ColorToBrushConverter}}" StrokeThickness="{Binding StrokeThickness}" Fill="{Binding FillColor, Converter={StaticResource ColorToBrushConverter}}" RadiusX="{Binding Radius}" RadiusY="{Binding Radius}" StrokeDashArray="{Binding StrokeStyle.DashArray}">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}"/>
                    <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:XRectangle}">
        <Rectangle Width="{Binding Width}" Height="{Binding Height}" Stroke="{Binding StrokeColor, Converter={StaticResource ColorToBrushConverter}}" StrokeThickness="{Binding StrokeThickness}" Fill="{Binding FillColor, Converter={StaticResource ColorToBrushConverter}}" RadiusX="{Binding Radius}" RadiusY="{Binding Radius}" StrokeDashArray="{Binding StrokeStyle.DashArray}">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}"/>
                    <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:XPolygon}">
        <Polygon Points="{Binding Points, Converter={StaticResource PointsCollectionConverter}}" Stroke="{Binding StrokeColor, Converter={StaticResource ColorToBrushConverter}}" StrokeThickness="{Binding StrokeThickness}" Fill="{Binding FillColor, Converter={StaticResource ColorToBrushConverter}}" StrokeDashArray="{Binding StrokeStyle.DashArray}">
            <Polygon.RenderTransform>
                <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
            </Polygon.RenderTransform>
        </Polygon>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:XText}">
        <TextBlock Text="{Binding Text}" FontFamily="{Binding FontFamily}" FontSize="{Binding FontSize}" Foreground="{Binding TextColor, Converter={StaticResource ColorToBrushConverter}}" FontWeight="{Binding IsBold, Converter={StaticResource BoolToFontWeightConverter}}" FontStyle="{Binding IsItalic, Converter={StaticResource BoolToFontStyleConverter}}">
            <TextBlock.TextDecorations>
                <MultiBinding Converter="{StaticResource TextDecorationsConverter}">
                    <Binding Path="IsUnderline"/>
                    <Binding Path="IsStrikethrough"/>
                </MultiBinding>
            </TextBlock.TextDecorations>
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}"/>
                    <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:XBitmap}">
        <Image Source="{Binding Bitmap}" Width="{Binding Width}" Height="{Binding Height}" Stretch="UniformToFill">
            <Image.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}"/>
                    <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
    </DataTemplate>

</ResourceDictionary>