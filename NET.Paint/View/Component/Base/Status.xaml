<UserControl x:Class="NET.Paint.View.Component.Base.Status"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:icons="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:tools="clr-namespace:NET.Paint.Drawing.Model;assembly=NET.Paint.Drawing"
             xmlns:constant="clr-namespace:NET.Paint.Drawing.Constant;assembly=NET.Paint.Drawing"
             xmlns:service="clr-namespace:NET.Paint.Drawing.Service;assembly=NET.Paint.Drawing"
             xmlns:controls="clr-namespace:NET.Paint.View.Component.Base.Controls"
             xmlns:converter="clr-namespace:NET.Paint.Converter"
             xmlns:selectors="clr-namespace:NET.Paint.Selector"
             mc:Ignorable="d" 
             d:DesignHeight="30" d:DesignWidth="800" d:Background="White"
             d:DataContext="{d:DesignInstance Type=service:XService, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <converter:ToolTypeVisibilityConverter x:Key="ToolTypeVisibilityConverter"/>
    </UserControl.Resources>

    <Grid>
        <StatusBar Background="Transparent">
            <StatusBarItem Margin="5,0,0,0">
                <TextBlock>
                    <Bold>Tool:</Bold>
                    <Run Text="{Binding Tools.ActiveTool}" FontWeight="SemiBold"/>
                </TextBlock>
            </StatusBarItem>
            <StatusBarItem Margin="0,-1,0,0" Content="{Binding Tools.PencilMode}" ContentStringFormat="[{0}]" FontSize="13" Visibility="{Binding Tools.ActiveTool, Converter={StaticResource ToolTypeVisibilityConverter}, ConverterParameter={x:Static constant:XToolType.Pencil}}"/>
            <StatusBarItem Margin="0,-1,0,0" Content="{Binding Tools.SelectionMode}" ContentStringFormat="[{0}]" FontSize="13" Visibility="{Binding Tools.ActiveTool, Converter={StaticResource ToolTypeVisibilityConverter}, ConverterParameter={x:Static constant:XToolType.Selector}}"/>
            <StatusBarItem Margin="0,-1,0,0" Content="{Binding Tools.ActivePolygon}" ContentStringFormat="[{0}]" FontSize="13" Visibility="{Binding Tools.ActiveTool, Converter={StaticResource ToolTypeVisibilityConverter}, ConverterParameter={x:Static constant:XToolType.Polygon}}"/>
            <StatusBarItem Margin="0,-1,0,0" Content="{Binding Tools.ActiveEllipse}" ContentStringFormat="[{0}]" FontSize="13" Visibility="{Binding Tools.ActiveTool, Converter={StaticResource ToolTypeVisibilityConverter}, ConverterParameter={x:Static constant:XToolType.Ellipse}}"/>
            <StatusBarItem Margin="0,-1,0,0" Content="{Binding Tools.ActiveRectangle}" ContentStringFormat="[{0}]" FontSize="13" Visibility="{Binding Tools.ActiveTool, Converter={StaticResource ToolTypeVisibilityConverter}, ConverterParameter={x:Static constant:XToolType.Rectangle}}"/>
            <StatusBarItem Margin="0,-1,0,0" Content="{Binding Tools.ActiveBitmap}" ContentStringFormat="[{0}]" FontSize="13" Visibility="{Binding Tools.ActiveTool, Converter={StaticResource ToolTypeVisibilityConverter}, ConverterParameter={x:Static constant:XToolType.Bitmap}}"/>
            <Separator Margin="5,2" Visibility="Hidden"/>
            <StatusBarItem>
                <TextBlock>
                    <Bold>Mouse:</Bold>
                    [X: <Run Text="{Binding Tools.MouseLocation.X, StringFormat=0.00}"/>,
                    Y: <Run Text="{Binding Tools.MouseLocation.Y, StringFormat=0.00}"/>]
                </TextBlock>
            </StatusBarItem>
            <Separator Margin="5,2" Visibility="Hidden"/>
            <StatusBarItem>
                <Grid Width="20" Height="20" Margin="0,1,0,0">
                    <!--
                    <xctk:ColorPicker Background="{Binding Tools.PrimaryColor, Converter={StaticResource ColorToBrushConverter}}" SelectedColor="{Binding Tools.PrimaryColor}" ShowDropDownButton="False" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" BorderThickness="0"/>
                    <xctk:ColorPicker Background="{Binding Tools.SecondaryColor, Converter={StaticResource ColorToBrushConverter}}" SelectedColor="{Binding Tools.SecondaryColor}" ShowDropDownButton="False" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" BorderThickness="0" Margin="4"/>
                -->
                </Grid>
            </StatusBarItem>

            <StatusBarItem HorizontalAlignment="Right" Margin="0,0,5,0" Padding="0">
                <StackPanel Orientation="Horizontal" Height="20">
                    <StatusBarItem Margin="20,0,0,0" Padding="0">
                        <TextBlock>
                            <Bold>Active:</Bold>
                            <Run Text="{Binding ActiveImage.Title}" FontWeight="SemiBold"/>
                            [<Run Text="{Binding ActiveImage.ActiveLayer.Title}" />]
                        </TextBlock>
                    </StatusBarItem>
                    <Separator Margin="5,2"/>
                    <StatusBarItem Margin="5,0" Padding="0">
                        <ToggleButton x:Name="NotificationButton" Background="Transparent" Content="{icons:MaterialIconExt Kind=BellOutline}" IsChecked="{Binding IsOpen, ElementName=NotificationTray}" BorderBrush="Transparent" Height="20" Width="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </StatusBarItem>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        
        <Popup x:Name="NotificationTray" Placement="Top" PlacementTarget="{Binding ElementName=NotificationButton}" StaysOpen="False">
            <controls:NotificationTray DataContext="{Binding}"/>
        </Popup>
    </Grid>
</UserControl>
