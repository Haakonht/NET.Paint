<UserControl x:Class="NET.Paint.View.Component.ToolBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:tools="clr-namespace:NET.Paint.Drawing.Model;assembly=NET.Paint.Drawing"
             xmlns:converter="clr-namespace:NET.Paint.Converter"
             xmlns:options="clr-namespace:NET.Paint.Drawing.Constant;assembly=NET.Paint.Drawing"
             xmlns:service="clr-namespace:NET.Paint.Drawing.Service;assembly=NET.Paint.Drawing"
             xmlns:selector="clr-namespace:NET.Paint.Selector"
             xmlns:subComponents="clr-namespace:NET.Paint.View.Component.Tools.Subcomponent"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="41" d:Background="White"
             d:DataContext="{d:DesignInstance Type=service:XService, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Resources/ToolIcons.xaml"/>
                <ResourceDictionary Source="../../../Resources/ShapeIcons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <selector:SelectorTemplateSelector x:Key="SelectorTemplateSelector" EmptyTemplate="{StaticResource SelectorToolIcon}"
                                               PointerTemplate="{StaticResource PointerToolIcon}" RectangleTemplate="{StaticResource SelectorToolIcon}" 
                                               LassoTemplate="{StaticResource LassoToolIcon}" ManipulatorTemplate="{StaticResource ManipulatorToolIcon}"/>
            <selector:PolygonTemplateSelector x:Key="PolygonTemplateSelector" EmptyTemplate="{StaticResource PolygonToolIcon}"
                                              RegularTemplate="{StaticResource PentagonShape}" StarTemplate="{StaticResource StarShape}" HeartTemplate="{StaticResource HeartShape}" 
                                              ArrowTemplate="{StaticResource ArrowShape}" SpiralTemplate="{StaticResource SpiralShape}" CloudTemplate="{StaticResource CloudShape}"/>
            <selector:EvenOddTemplateSelector x:Key="RectangleTemplateSelector" EmptyTemplate="{StaticResource RectangleToolIcon}"
                                   EvenTemplate="{StaticResource SquareToolIcon}" OddTemplate="{StaticResource RectangleToolIcon}"/>
            <selector:EvenOddTemplateSelector x:Key="EllipseTemplateSelector" EmptyTemplate="{StaticResource EllipseToolIcon}"
                                   EvenTemplate="{StaticResource CircleToolIcon}" OddTemplate="{StaticResource EllipseToolIcon}"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel DataContext="{Binding Tools}" Margin="5">
        <StackPanel DockPanel.Dock="Top">
            <RadioButton x:Name="SelectorToolSelect" Style="{StaticResource {x:Type ToggleButton}}" Content="{Binding SelectionMode}" ContentTemplateSelector="{StaticResource SelectorTemplateSelector}" IsChecked="{Binding ActiveTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XToolType.Selector}}" GroupName="SelectedTool" Height="25" Click="OpenSelectorQuickSelect"/>
            <RadioButton Style="{StaticResource {x:Type ToggleButton}}" ContentTemplate="{StaticResource PencilToolIcon}" IsChecked="{Binding ActiveTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XToolType.Pencil}}" GroupName="SelectedTool" Height="25"/>
            <RadioButton Style="{StaticResource {x:Type ToggleButton}}" ContentTemplate="{StaticResource LineToolIcon}" IsChecked="{Binding ActiveTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XToolType.Line}}" GroupName="SelectedTool" Height="25"/>
            <RadioButton Style="{StaticResource {x:Type ToggleButton}}" ContentTemplate="{StaticResource CurveToolIcon}" IsChecked="{Binding ActiveTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XToolType.Curve}}" GroupName="SelectedTool" Height="25"/>
            <RadioButton Style="{StaticResource {x:Type ToggleButton}}" ContentTemplate="{StaticResource BezierToolIcon}" IsChecked="{Binding ActiveTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XToolType.Bezier}}" GroupName="SelectedTool" Height="25"/>
            <RadioButton x:Name="EllipseToolSelect" Style="{StaticResource {x:Type ToggleButton}}" Content="{Binding ActiveEllipse}" ContentTemplateSelector="{StaticResource EllipseTemplateSelector}" IsChecked="{Binding ActiveTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XToolType.Ellipse}}" GroupName="SelectedTool" Height="25" Click="OpenEllipseQuickSelect"/>
            <RadioButton Style="{StaticResource {x:Type ToggleButton}}" ContentTemplate="{StaticResource TriangleToolIcon}" IsChecked="{Binding ActiveTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XToolType.Triangle}}" GroupName="SelectedTool" Height="25"/>
            <RadioButton x:Name="RectangleToolSelect" Style="{StaticResource {x:Type ToggleButton}}" Content="{Binding ActiveRectangle}" ContentTemplateSelector="{StaticResource RectangleTemplateSelector}" IsChecked="{Binding ActiveTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XToolType.Rectangle}}" GroupName="SelectedTool" Height="25" Click="OpenRectangleQuickSelect"/>
            <RadioButton x:Name="PolygonToolSelect" Style="{StaticResource {x:Type ToggleButton}}" Content="{Binding ActivePolygon}" ContentTemplateSelector="{StaticResource PolygonTemplateSelector}" IsChecked="{Binding ActiveTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XToolType.Polygon}}" GroupName="SelectedTool" Height="25" Click="OpenPolygonQuickSelect"/>
            <RadioButton Style="{StaticResource {x:Type ToggleButton}}" ContentTemplate="{StaticResource TextToolIcon}" IsChecked="{Binding ActiveTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XToolType.Text}}" GroupName="SelectedTool" Height="25"/>
            <RadioButton Style="{StaticResource {x:Type ToggleButton}}" ContentTemplate="{StaticResource BitmapToolIcon}" IsChecked="{Binding ActiveTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XToolType.Bitmap}}" GroupName="SelectedTool" Height="25"/>
        </StackPanel>

        <StackPanel DockPanel.Dock="Bottom">
            <xctk:ColorPicker SelectedColor="{Binding StrokeColor, Mode=TwoWay}" Height="25" VerticalContentAlignment="Stretch" ShowDropDownButton="False" Background="{Binding StrokeColor, Converter={StaticResource ColorToBrushConverter}}"/>
            <xctk:ColorPicker SelectedColor="{Binding FillColor, Mode=TwoWay}" Height="25" Margin="0,0,0,25" VerticalContentAlignment="Stretch" ShowDropDownButton="False"  Background="{Binding FillColor, Converter={StaticResource ColorToBrushConverter}}"/>
            <ToggleButton x:Name="GridToolSelect" Height="25" ContentTemplate="{StaticResource GridToolIcon}" IsChecked="{Binding IsOpen, ElementName=GridQuickSelect}"/>
            <ToggleButton x:Name="ZoomToolSelect" Height="25" ContentTemplate="{StaticResource ZoomToolIcon}" IsChecked="{Binding IsOpen, ElementName=ZoomQuickSelect}"/>
            <ToggleButton x:Name="RulerToolSelect" Height="25" ContentTemplate="{StaticResource RulerToolIcon}" IsChecked="{Binding IsOpen, ElementName=RulerQuickSelect}"/>
        </StackPanel>

        <Popup x:Name="GridQuickSelect" PlacementTarget="{Binding ElementName=GridToolSelect}" Placement="Left" StaysOpen="False" VerticalOffset="-115">
            <Border Background="White" BorderBrush="Black" BorderThickness="1" Padding="7.5" MouseLeave="CloseGridQuickSelect" DataContext="{Binding DataContext.ActiveImage, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <subComponents:Grid Width="150" DataContext="{Binding Configuration}"/>
            </Border>
        </Popup>

        <Popup x:Name="ZoomQuickSelect" PlacementTarget="{Binding ElementName=ZoomToolSelect}" Placement="Left" StaysOpen="False" VerticalOffset="-5">
            <Border Background="White" BorderBrush="Black" BorderThickness="1" Padding="5" MouseLeave="CloseZoomQuickSelect" DataContext="{Binding DataContext.ActiveImage, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <subComponents:Zoom Width="150" DataContext="{Binding Configuration}"/>
            </Border>
        </Popup>

        <Popup x:Name="RulerQuickSelect" PlacementTarget="{Binding ElementName=RulerToolSelect}" Placement="Left" StaysOpen="False" VerticalOffset="-5">
            <Border Background="White" BorderBrush="Black" BorderThickness="1" Padding="5" MouseLeave="CloseRulerQuickSelect" DataContext="{Binding DataContext.ActiveImage, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <subComponents:Ruler Width="150" DataContext="{Binding Configuration}"/>
            </Border>
        </Popup>

        <Popup x:Name="PolygonQuickSelect" PlacementTarget="{Binding ElementName=PolygonToolSelect}" Placement="Left" StaysOpen="False" VerticalOffset="-5">
            <Border Background="White" BorderBrush="Black" BorderThickness="1" Padding="5" MouseLeave="ClosePolygonQuickSelect">
                <UniformGrid Columns="1" Width="25">
                    <RadioButton Height="25" ContentTemplate="{StaticResource PentagonShape}" IsChecked="{Binding ActivePolygon, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XPolygonStyle.Regular}, Mode=TwoWay}" Style="{StaticResource {x:Type ToggleButton}}" GroupName="PolygonSelect"/>
                    <RadioButton Height="25" ContentTemplate="{StaticResource StarShape}" IsChecked="{Binding ActivePolygon, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XPolygonStyle.Star}, Mode=TwoWay}" Style="{StaticResource {x:Type ToggleButton}}" GroupName="PolygonSelect"/>
                    <RadioButton Height="25" ContentTemplate="{StaticResource HeartShape}" IsChecked="{Binding ActivePolygon, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XPolygonStyle.Heart}, Mode=TwoWay}" Style="{StaticResource {x:Type ToggleButton}}" GroupName="PolygonSelect"/>
                    <RadioButton Height="25" ContentTemplate="{StaticResource ArrowShape}" IsChecked="{Binding ActivePolygon, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XPolygonStyle.Arrow}, Mode=TwoWay}" Style="{StaticResource {x:Type ToggleButton}}" GroupName="PolygonSelect"/>
                    <RadioButton Height="25" ContentTemplate="{StaticResource SpiralShape}" IsChecked="{Binding ActivePolygon, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XPolygonStyle.Spiral}, Mode=TwoWay}" Style="{StaticResource {x:Type ToggleButton}}" GroupName="PolygonSelect"/>
                    <RadioButton Height="25" ContentTemplate="{StaticResource CloudShape}" IsChecked="{Binding ActivePolygon, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XPolygonStyle.Cloud}, Mode=TwoWay}" Style="{StaticResource {x:Type ToggleButton}}" GroupName="PolygonSelect"/>
                </UniformGrid>
            </Border>
        </Popup>

        <Popup x:Name="SelectorQuickSelect" PlacementTarget="{Binding ElementName=SelectorToolSelect}" Placement="Left" StaysOpen="False" VerticalOffset="-5">
            <Border Background="White" BorderBrush="Black" BorderThickness="1" Padding="5" MouseLeave="CloseSelectorQuickSelect">
                <UniformGrid Columns="1" Width="25">
                    <RadioButton Height="25" ContentTemplate="{StaticResource PointerToolIcon}" IsChecked="{Binding SelectionMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XSelectionMode.Pointer}, Mode=TwoWay}" Style="{StaticResource {x:Type ToggleButton}}" GroupName="SelectorSelect"/>
                    <RadioButton Height="25" ContentTemplate="{StaticResource SelectorToolIcon}" IsChecked="{Binding SelectionMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XSelectionMode.Rectangle}, Mode=TwoWay}" Style="{StaticResource {x:Type ToggleButton}}" GroupName="SelectorSelect"/>
                    <RadioButton Height="25" ContentTemplate="{StaticResource LassoToolIcon}" IsChecked="{Binding SelectionMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XSelectionMode.Lasso}, Mode=TwoWay}" Style="{StaticResource {x:Type ToggleButton}}" GroupName="SelectorSelect"/>
                </UniformGrid>
            </Border>
        </Popup>

        <Popup x:Name="RectangleQuickSelect" PlacementTarget="{Binding ElementName=RectangleToolSelect}" Placement="Left" StaysOpen="False" VerticalOffset="-5">
            <Border Background="White" BorderBrush="Black" BorderThickness="1" Padding="5" MouseLeave="CloseRectangleQuickSelect">
                <UniformGrid Columns="1" Width="25">
                    <RadioButton Style="{StaticResource {x:Type ToggleButton}}" ContentTemplate="{StaticResource RectangleToolIcon}" IsChecked="{Binding ActiveRectangle, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XRectangleStyle.Rectangle}, Mode=TwoWay}" GroupName="RectangleSelect" Height="25"/>
                    <RadioButton Style="{StaticResource {x:Type ToggleButton}}" ContentTemplate="{StaticResource SquareToolIcon}" IsChecked="{Binding ActiveRectangle, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XRectangleStyle.Square}, Mode=TwoWay}" GroupName="RectangleSelect" Height="25"/>
                </UniformGrid>
            </Border>
        </Popup>

        <Popup x:Name="EllipseQuickSelect" PlacementTarget="{Binding ElementName=EllipseToolSelect}" Placement="Left" StaysOpen="False" VerticalOffset="-5">
            <Border Background="White" BorderBrush="Black" BorderThickness="1" Padding="5" MouseLeave="CloseEllipseQuickSelect">
                <UniformGrid Columns="1" Width="25">
                    <RadioButton Style="{StaticResource {x:Type ToggleButton}}" ContentTemplate="{StaticResource EllipseToolIcon}" IsChecked="{Binding ActiveEllipse, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XEllipseStyle.Ellipse}, Mode=TwoWay}" GroupName="EllipseSelect" Height="25"/>
                    <RadioButton Style="{StaticResource {x:Type ToggleButton}}" ContentTemplate="{StaticResource CircleToolIcon}" IsChecked="{Binding ActiveEllipse, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static options:XEllipseStyle.Circle}, Mode=TwoWay}" GroupName="EllipseSelect" Height="25"/>
                </UniformGrid>
            </Border>
        </Popup>
    </DockPanel>
</UserControl>
