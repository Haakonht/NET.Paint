<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:shape="clr-namespace:NET.Paint.ViewModels.Drawing.Shape"  xmlns:converters="clr-namespace:NET.Paint.View.Component.Drawing.Converters" x:Class="NET.Paint.Resources.Handlers.BoundingBoxHandler">

    <SolidColorBrush x:Key="DefaultStrokeBrush" Color="Black"/>
    <SolidColorBrush x:Key="DefaultFillBrush" Color="White" Opacity="0.2"/>


    <VisualBrush x:Key="BorderBrush">
        <VisualBrush.Visual>
            <Rectangle StrokeDashArray="1 2" Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="1"
                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
        </VisualBrush.Visual>
    </VisualBrush>

    <DataTemplate DataType="{x:Type shape:PolygonViewModel}">
        <DataTemplate.Resources>
            <converters:PointCollectionConverter x:Key="PointCollectionConverter"/>
        </DataTemplate.Resources>
        <Polyline Points="{Binding Points, Converter={StaticResource PointCollectionConverter}}" Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="2" StrokeDashArray="1 2"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:LineViewModel}">
        <Line X1="{Binding Start.X}" Y1="{Binding Start.Y}" X2="{Binding End.X}" Y2="{Binding End.Y}" Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="2" StrokeDashArray="1 2"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:CurveViewModel}">
        <Path Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="2" StrokeDashArray="1 2">
            <Path.Data>
                <PathGeometry>
                    <PathFigure StartPoint="{Binding Start}">
                        <QuadraticBezierSegment Point1="{Binding Ctrl1}" Point2="{Binding End}" IsStroked="True" />
                    </PathFigure>
                </PathGeometry>
            </Path.Data>
        </Path>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:BezierViewModel}">
        <Path Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="2" StrokeDashArray="1 2">
            <Path.Data>
                <PathGeometry>
                    <PathFigure StartPoint="{Binding Start}">
                        <BezierSegment Point1="{Binding Ctrl1}"  Point2="{Binding Ctrl2}"  Point3="{Binding End}" IsStroked="True" />
                    </PathFigure>
                </PathGeometry>
            </Path.Data>
        </Path>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:CircleViewModel}">
        <Ellipse Width="{Binding Width}" Height="{Binding Height}" Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="2" Fill="{StaticResource DefaultFillBrush}" StrokeDashArray="1 2">
            <Ellipse.RenderTransform>
                <TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}"/>
            </Ellipse.RenderTransform>
        </Ellipse>
    </DataTemplate>


    <DataTemplate DataType="{x:Type shape:EllipseViewModel}">
        <Ellipse Width="{Binding Width}" Height="{Binding Height}" Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="2" Fill="{StaticResource DefaultFillBrush}" StrokeDashArray="1 2">
            <Ellipse.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}"/>
                    <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
                </TransformGroup>
            </Ellipse.RenderTransform>
        </Ellipse>
    </DataTemplate>


    <DataTemplate DataType="{x:Type shape:SquareViewModel}">
        <Rectangle Width="{Binding Width}" Height="{Binding Height}" Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="2" Fill="{StaticResource DefaultFillBrush}" RadiusX="{Binding Radius}" RadiusY="{Binding Radius}" StrokeDashArray="1 2">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}"/>
                    <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:RectangleViewModel}">
        <Rectangle Width="{Binding Width}" Height="{Binding Height}" Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="2" Fill="{StaticResource DefaultFillBrush}" RadiusX="{Binding Radius}" RadiusY="{Binding Radius}" StrokeDashArray="1 2">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}"/>
                    <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:CloudViewModel}">
        <DataTemplate.Resources>
            <converters:SmoothCurveConverter x:Key="SmoothCurveConverter"/>
        </DataTemplate.Resources>
        <Path Fill="{StaticResource DefaultFillBrush}" Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="2" StrokeDashArray="1 2">
            <Path.Data>
                <PathGeometry>
                    <PathFigure StartPoint="{Binding Points[0]}" IsClosed="True">
                        <PolyBezierSegment Points="{Binding Points, Converter={StaticResource SmoothCurveConverter}}" />
                    </PathFigure>
                </PathGeometry>
            </Path.Data>
            <Path.RenderTransform>
                <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
            </Path.RenderTransform>
        </Path>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:PolygonViewModel}">
        <DataTemplate.Resources>
            <converters:PointCollectionConverter x:Key="PointCollectionConverter"/>
        </DataTemplate.Resources>
        <Polygon Points="{Binding Points, Converter={StaticResource PointCollectionConverter}}" Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="2" Fill="{StaticResource DefaultFillBrush}" StrokeDashArray="1 2">
            <Polygon.RenderTransform>
                <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
            </Polygon.RenderTransform>
        </Polygon>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:TextViewModel}">
        <DataTemplate.Resources>
            <converters:TextBoldConverter x:Key="BoolToFontWeightConverter"/>
            <converters:TextItalicConverter x:Key="BoolToFontStyleConverter"/>
            <converters:TextDecorationsConverter x:Key="TextDecorationsConverter"/>
        </DataTemplate.Resources>
        <Rectangle Width="{Binding Width}" Height="{Binding Height}" Fill="{StaticResource DefaultFillBrush}" Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="2" StrokeDashArray="1 2">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}"/>
                    <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shape:BitmapViewModel}">
        <Rectangle Width="{Binding Width}" Height="{Binding Height}" Fill="{StaticResource DefaultFillBrush}" Stroke="{StaticResource DefaultStrokeBrush}" StrokeThickness="2" StrokeDashArray="1 2">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}"/>
                    <RotateTransform CenterX="{Binding Center.X}" CenterY="{Binding Center.Y}" Angle="{Binding Rotation}"/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
    </DataTemplate>

</ResourceDictionary>