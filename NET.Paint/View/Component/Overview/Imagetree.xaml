<UserControl x:Class="NET.Paint.View.Component.Overview.ImageTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:shape="clr-namespace:NET.Paint.Drawing.Model.Shape;assembly=NET.Paint.Drawing"
             xmlns:service="clr-namespace:NET.Paint.Drawing.Service;assembly=NET.Paint.Drawing"
             xmlns:selector="clr-namespace:NET.Paint.Selector"
             xmlns:converter="clr-namespace:NET.Paint.Converter"
             xmlns:structure="clr-namespace:NET.Paint.Drawing.Model.Structure;assembly=NET.Paint.Drawing"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="200" d:Background="White"
             d:DataContext="{d:DesignInstance Type=service:XService, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Resources/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converter:IsActiveConverter x:Key="IsActiveConverter"/>
            <converter:LayerTypeToIconConverter x:Key="LayerTypeToIconConverter"/>

            <Style x:Key="HoverStyle" TargetType="TextBlock">
                <Setter Property="FontWeight" Value="Normal"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="VisibilityToggleStyle" TargetType="ToggleButton" x:Shared="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <fa:IconBlock Icon="Eye" Foreground="Black" FontSize="12"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <fa:IconBlock Icon="EyeSlash" Foreground="Black" FontSize="12"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <fa:IconBlock Icon="Eye" Foreground="Black" FontSize="12"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer x:Name="ImageScroll" MouseDown="Unselect" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" DataContext="{Binding ActiveImage}">
        <StackPanel Orientation="Vertical" Margin="5,0,0,0">
            <Border BorderBrush="LightGray"  Margin="0,5,5,0" BorderThickness="1,0,0,1" Background="Transparent" Padding="5" MouseDown="SelectImage">
                <StackPanel Orientation="Horizontal" Margin="5,0,0,0" VerticalAlignment="Center">
                    <fa:IconBlock Icon="Image" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Title, Mode=OneWay}" VerticalAlignment="Center" Margin="5,0,0,0" Style="{StaticResource HoverStyle}"/>
                    <StackPanel.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add" Click="AddImage"/>
                            <MenuItem Header="Remove" Click="Remove"/>
                        </ContextMenu>
                    </StackPanel.ContextMenu>
                </StackPanel>
            </Border>

            <TreeView ItemsSource="{Binding Layers}" SelectedItemChanged="SelectedItemChanged" BorderBrush="Transparent" Margin="0,-1,0,0" PreviewMouseLeftButtonDown="TreeView_PreviewMouseLeftButtonDown" MouseMove="TreeView_MouseMove" DragEnter="TreeView_DragOver" Drop="TreeView_Drop" AllowDrop="True" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Shapes}">
                        <Grid Margin="0,5,0,0" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="18"/>
                                <ColumnDefinition Width="130"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <fa:IconBlock Icon="{Binding Type, Converter={StaticResource LayerTypeToIconConverter}}" VerticalAlignment="Center" Grid.Column="0"/>
                            <TextBlock Text="{Binding Title, Mode=OneWay}" VerticalAlignment="Center" Margin="5,0,0,0" Grid.Column="1">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource HoverStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Value="True">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource IsActiveConverter}">
                                                        <Binding />
                                                        <Binding Path="DataContext.ActiveLayer" RelativeSource="{RelativeSource AncestorType=ScrollViewer}" />
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <ToggleButton IsChecked="{Binding IsVisible}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="Transparent" BorderBrush="Transparent" Grid.Column="2" Style="{StaticResource VisibilityToggleStyle}"/>
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Add" Click="AddLayer"/>
                                    <MenuItem Header="Edit">
                                        <MenuItem Header="Cut" Click="Cut"/>
                                        <MenuItem Header="Copy" Click="Copy"/>
                                        <MenuItem Header="Paste" Click="Paste"/>
                                    </MenuItem>
                                    <MenuItem Header="Flatten" Click="Flatten"/>
                                    <MenuItem Header="Remove" Click="Remove"/>
                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>
                        <HierarchicalDataTemplate.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl Content="{Binding Type}" ContentTemplateSelector="{StaticResource IconSelector}" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding Type, Mode=OneWay}" VerticalAlignment="Center" Margin="5,0,0,0" Style="{StaticResource HoverStyle}"/>
                                    <StackPanel.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Edit">
                                                <MenuItem Header="Cut" Click="Cut"/>
                                                <MenuItem Header="Copy" Click="Copy"/>
                                                <MenuItem Header="Paste" Click="Paste"/>
                                            </MenuItem>
                                            <MenuItem Header="Remove" Click="Remove"/>
                                        </ContextMenu>
                                    </StackPanel.ContextMenu>
                                </StackPanel>
                            </DataTemplate>
                        </HierarchicalDataTemplate.ItemTemplate>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
                <TreeView.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black" />
                </TreeView.Resources>
            </TreeView>
        </StackPanel>
    </ScrollViewer>
</UserControl>
