<UserControl x:Class="NET.Paint.View.Component.Overview.ProjectTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:shape="clr-namespace:NET.Paint.Drawing.Model.Shape;assembly=NET.Paint.Drawing"
             xmlns:service="clr-namespace:NET.Paint.Drawing.Service;assembly=NET.Paint.Drawing"
             xmlns:selector="clr-namespace:NET.Paint.Selector"
             xmlns:converter="clr-namespace:NET.Paint.Converter"
             xmlns:constants="clr-namespace:NET.Paint.Drawing.Constant;assembly=NET.Paint.Drawing"
             xmlns:structure="clr-namespace:NET.Paint.Drawing.Model.Structure;assembly=NET.Paint.Drawing"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="200" d:Background="White"
             d:DataContext="{d:DesignInstance Type=service:XService, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Resources/Icons.xaml"/>
                <ResourceDictionary Source="../../../Resources/Controls/StretchingTreeView.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converter:IsActiveConverter x:Key="IsActiveConverter"/>
            <converter:BothActiveConverter x:Key="BothActiveConverter"/>

            <Style TargetType="TextBlock" x:Key="HoverStyle">
                <Setter Property="FontWeight" Value="Normal"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <ContextMenu x:Key="ImageContextMenu">
                <MenuItem Header="Add" Click="AddImage"/>
                <MenuItem Header="Remove" Click="Remove"/>
            </ContextMenu>

            <ContextMenu x:Key="LayerContextMenu">
                <MenuItem Header="Add" Click="AddLayer"/>
                <MenuItem Header="Edit">
                    <MenuItem Header="Cut" Click="Cut"/>
                    <MenuItem Header="Copy" Click="Copy"/>
                    <MenuItem Header="Paste" Click="Paste"/>
                </MenuItem>
                <MenuItem Header="Flatten" Click="Flatten"/>
                <MenuItem Header="Remove" Click="Remove"/>
            </ContextMenu>

            <ContextMenu x:Key="RenderableContextMenu">
                <MenuItem Header="Add" Click="AddLayer"/>
                <MenuItem Header="Edit">
                    <MenuItem Header="Cut" Click="Cut"/>
                    <MenuItem Header="Copy" Click="Copy"/>
                    <MenuItem Header="Paste" Click="Paste"/>
                </MenuItem>
                <MenuItem Header="Remove" Click="Remove"/>
            </ContextMenu>


            <Style x:Key="VisibilityToggleStyle" TargetType="ToggleButton" x:Shared="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <fa:IconBlock Icon="Eye" Foreground="Gray" FontSize="{TemplateBinding FontSize}"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <fa:IconBlock Icon="EyeSlash" Foreground="Gray" FontSize="{TemplateBinding FontSize}"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <fa:IconBlock Icon="Eye" Foreground="Gray" FontSize="{TemplateBinding FontSize}"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <fa:IconBlock Icon="EyeSlash" Foreground="Black" FontSize="{TemplateBinding FontSize}"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <fa:IconBlock Icon="Eye" Foreground="Black" FontSize="{TemplateBinding FontSize}"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <HierarchicalDataTemplate x:Key="ProjectTreeTemplate" ItemsSource="{Binding Layers}" DataType="{x:Type structure:XImage}">
                <DockPanel x:Name="ImageNode" LastChildFill="True" Margin="0,5,0,0" ContextMenu="{StaticResource ImageContextMenu}">
                    <fa:IconBlock Icon="Image" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                    <TextBlock Text="{Binding Title, Mode=OneWay}" VerticalAlignment="Center" Margin="5,0,0,0" Grid.Column="1">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource HoverStyle}">
                                <Style.Triggers>
                                    <DataTrigger Value="True">
                                        <DataTrigger.Binding>
                                            <MultiBinding Converter="{StaticResource IsActiveConverter}">
                                                <Binding />
                                                <Binding Path="DataContext.ActiveImage" RelativeSource="{RelativeSource AncestorType=UserControl}" />
                                            </MultiBinding>
                                        </DataTrigger.Binding>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </DockPanel>
                <HierarchicalDataTemplate.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Shapes}" DataType="{x:Type structure:XLayer}">
                        <DockPanel LastChildFill="True" Margin="0,5,0,0" ContextMenu="{StaticResource LayerContextMenu}">
                            <ToggleButton IsChecked="{Binding IsVisible}" VerticalAlignment="Center" Background="Transparent" BorderBrush="Transparent" FontSize="12" Style="{StaticResource VisibilityToggleStyle}" DockPanel.Dock="Right" Margin="0,0,5,0"/>
                            <ContentControl Content="{Binding}" VerticalAlignment="Center">
                                <ContentControl.Resources>
                                    <DataTemplate DataType="{x:Type structure:XVectorLayer}">
                                        <fa:IconBlock Icon="V"/>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type structure:XRasterLayer}">
                                        <fa:IconBlock Icon="R"/>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type structure:XHybridLayer}">
                                        <fa:IconBlock Icon="H"/>
                                    </DataTemplate>
                                </ContentControl.Resources>
                            </ContentControl>
                            <!-- Title -->
                            <TextBlock Text="{Binding Title, Mode=OneWay}" 
                                       VerticalAlignment="Center" 
                                       Margin="5,0,0,0">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource HoverStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Value="True">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource BothActiveConverter}">
                                                        <Binding />
                                                        <Binding Path="DataContext.ActiveLayer" RelativeSource="{RelativeSource AncestorType={x:Type TreeViewItem}, AncestorLevel=2}" />
                                                        <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType={x:Type TreeViewItem}, AncestorLevel=2}" />
                                                        <Binding Path="DataContext.ActiveImage" RelativeSource="{RelativeSource AncestorType=UserControl}" />
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DockPanel>
                        <HierarchicalDataTemplate.ItemTemplate>
                            <DataTemplate DataType="{x:Type structure:XRenderable}">
                                <StackPanel Orientation="Horizontal" ContextMenu="{StaticResource RenderableContextMenu}">
                                    <ContentControl Content="{Binding Type}" ContentTemplateSelector="{StaticResource IconSelector}" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding Type, Mode=OneWay}" VerticalAlignment="Center" Margin="5,0,0,0" Style="{StaticResource HoverStyle}"/>
                                </StackPanel>
                            </DataTemplate>
                        </HierarchicalDataTemplate.ItemTemplate>
                    </HierarchicalDataTemplate>
                </HierarchicalDataTemplate.ItemTemplate>
            </HierarchicalDataTemplate>
            
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid HorizontalAlignment="Stretch">
        <ScrollViewer MouseDown="Unselect" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" DataContext="{Binding Project}">
            <TreeView x:Name="ImageTree" ItemsSource="{Binding Images}" ItemTemplate="{StaticResource ProjectTreeTemplate}" SelectedItemChanged="SelectedItemChanged" BorderBrush="Transparent" Margin="0,-1,0,0" PreviewMouseLeftButtonDown="TreeView_PreviewMouseLeftButtonDown" MouseMove="TreeView_MouseMove" DragEnter="TreeView_DragOver" Drop="TreeView_Drop" AllowDrop="True" ItemContainerStyle="{StaticResource StretchingTreeView}">
                <TreeView.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black" />
                </TreeView.Resources>
            </TreeView>
        </ScrollViewer>
    </Grid>
</UserControl>
